#!/bin/bash
installdisk=""
installbootpartition=""
installsystempartition=""
installrootpasswd="1"
installrootpasswdstar="****"
installusername="user1"
installuserpasswd="1"
installuserpasswdstar="****"
installlang="tr_TR"
installkeyboard="trq"
mesaj="Ayarlari Secin"
DISKX=""
DISK=""
result=""
dsk=""
dskx=""

emptyfieldcheck()
{
if [ -z "${installdisk}" ];then
	echo "Disk Seciniz"
elif [ -z "${installbootpartition}" ];then
	echo "boot Kurulumu icin Bolumu Seciniz"
elif [ -z "${installsystempartition}" ];then
	echo "system Kurulumu icin Bolumu Seciniz"
elif [ -z "${installrootpasswd}" ];then
	echo "root Parolasi Belirleyiniz"
elif [ -z "${installusername}" ];then
	echo "Kullanici Adi Belirleyiniz"
elif [ -z "${installuserpasswd}" ];then
	echo "Kullanici Parolasi Belirleyiniz"
elif [ -z "${installlang}" ];then
	echo "Dil Seciniz"
elif [ -z "${installkeyboard}" ];then
	echo "Klavye Seciniz"
elif [ -n "${installdisk}" ] || [ -n "${installbootpartition}" ]  || [ -n "${installsystempartition}" ]|| [ -n "${installrootpasswd}" ] || [ -n "${installusername}" ] || [ -n "${installuserpasswd}" ] || [ -n "${installlang}" ] || [ -n "${installkeyboard}" ];then
	echo "2"
fi
}
install_main(){
echo "kurulum yapilacak disk : ${installdisk}"
return
}
select_disk_menu(){
    while true ;  do
       installdisk=/dev/$(TITLE="Select a disk for installation" select_disk)
       setup_grub=${installdisk}
       return
    done
}
select_disk_boot_partition_menu(){

    while true ;  do
       installbootpartition=/dev/$(TITLE="Select a disk for installation Partition" select_partition)
           if [[ ! -d /sys/firmware/efi ]] ; then
    	       installsystempartition="${installbootpartition}"
    	   fi

       return
    done
}

select_disk_system_partition_menu(){
    while true ;  do
       installsystempartition=/dev/$(TITLE="Select a disk for installation Partition" select_partition)
       return
    done
}

###### Partition selection menu ######
select_partition(){
    export PATH="/bin:/sbin:/usr/bin:/usr/sbin"
    menu=()
   # for disk in /sys/block/* ; do
        disk=${installdisk/*\//}
        for part in /sys/block/$disk/$disk* ; do
            if [[ -d $part ]] ; then
                part=${part/*\//}
                type=$(blkid | grep "/dev/$part:" | sed "s/.* TYPE=\"//g;s/\".*//g")
                label=$(blkid | grep "/dev/$part:" | grep LABEL | sed "s/.* LABEL=\"//g;s/\".*//g")
                if [[ "$label" == "" ]] ; then
                    label="-"
                fi
                size=$(lsblk -r | grep "^$part " | cut -f4 -d" ")
                menu+=("$part" "$type    $label    $size")
            fi
        done
   # done >/dev/null
    info_label="Partition | Filesystem | Label | Size"
    while [[ ! -b "/dev/$result" ]] ; do
        result=$(dialog --no-cancel \
            --output-fd 1 --menu \
            "$TITLE\n\n${info_label}" 0 0 0 \
            "${menu[@]}")
    done
    echo $result
}

###### Disk selection menu ######
select_disk(){
    export PATH="/bin:/sbin:/usr/bin:/usr/sbin"
    menu=()
    for disk in $(ls /sys/block/ | grep -e sd -e nvme) ; do
        disk=${disk/*\//}
        size=$(lsblk -r | grep "^$disk " | cut -f4 -d" ")
        menu+=("$disk" "$size")
    done >/dev/null
    while [[ ! -b "/dev/$result" ]] ; do
        result=$(dialog --no-cancel \
            --output-fd 1 --menu \
            "$TITLE" 0 0 0 \
            "${menu[@]}")
    done
    echo $result
}

###### username password menu ######
set_root_password(){
    while [[ "$installrootpasswd" == "" ]] ; do
       installrootpasswd=$(dialog  --no-cancel --output-fd 1 \
            --title "$TITLE" \
            --backtitle "initial settings" \
            --inputbox "Enter password" 0 0
        )
    done
    installrootpasswdstar="*******"
    echo $installrootpasswd
}
set_username_password(){
    while [[ "$installuserpasswd" == "" ]] ; do
       installuserpasswd=$(dialog  --no-cancel --output-fd 1 \
            --title "$TITLE" \
            --backtitle "initial settings" \
            --inputbox "Enter password" 0 0
        )
    done
    installuserpasswdstar="*******"
    echo $installuserpasswd
}
set_username(){
    while [[ "$installusername" == "" ]] ; do
       installusername=$(dialog  --no-cancel --output-fd 1 \
            --title "$TITLE" \
            --backtitle "initial settings" \
            --inputbox "Enter username" 0 0
        )
    done
    echo $installusername
}

###### Language menu ######
lang_menu(){
    ls /usr/share/i18n/locales | grep -v "^ku" | grep -v "^hy" | grep -v "@" | while read line ; do
        lang=$(echo $line | cut -f1 -d"_")
        if [[ ! -d /usr/share/locale/$lang ]] ; then
            continue
        fi
        desc=$(cat /usr/share/i18n/locales/$line | grep "^title " | cut -f2 -d"\"" | sed "s/ /_/g")
        if [[ "$desc" == "" ]] ; then
            desc="$line"
        fi
        echo "$line $desc"
    done
}

set_language(){
    installlang=$(dialog --no-cancel \
                --output-fd 1 --menu \
                "Test" 0 0 0 \
                $(lang_menu)
            )
    echo $installlang
}
###### Keyboard menu ######
set_keyboard(){
    while [[ "$installkeyboard" == "" ]] ; do
       installkeyboard=$(dialog  --no-cancel --output-fd 1 \
            --title "$TITLE" \
            --backtitle "Keyboard Settings" \
            --inputbox "Enter Keyboard(trq, trf)" 0 0
        )
    done
    echo $installkeyboard
}

yenidenbaslat()
{
echo "Sistem Yeniden Baslatiliyor.............."
if [[ $$ -eq 0 ]] ; then
            echo o > /proc/sysrq-trigger
        else
            exit 1
        fi
}

start_live(){
    killall udevd &>/dev/null || true
    exec /sbin/openrc-init

}

uefiuyar(){

      dialog --stdout --title "Dikkat!" \
  	--backtitle "install" \
  	--yesno "Diske  daha once legacy kurulum yapilmis. \
  	 \nIsleme devam ederseniz diskteki tum bilgiler silinecek.\
  	 \nIsleme devam etmek istiyor musunuz?" 7 60
	
	operation=$?
	if [[ "$operation" == "0" ]]; then
		result="yes"
	else
		result="no"
	fi
	echo $result
}

legacyuyar(){

      dialog --stdout --title "Dikkat!" \
  	--backtitle "install" \
  	--yesno "Diske  daha once uefi kurulum yapilmis. \
  	 \nIsleme devam ederseniz diskteki tum bilgiler silinecek.\
  	 \nIsleme devam etmek istiyor musunuz?" 7 60
	
	operation=$?
	if [[ "$operation" == "0" ]]; then
		result="yes"
	else
		result="no"
	fi
	echo $result
}
yukle()
{
echo "kuruluma ge√ßildi........"
           	#------------------------------------------------------------------------------------------------
           	if [[ -d /sys/firmware/efi ]] ; then
           		disklabel=$(blkid -s PTTYPE -o value "/dev/${dsk}")
           	 	if [[ "$disklabel" != "gpt" ]]; then
           	 	
		   	 	if [[ "$(uefiuyar)" == "yes" ]]; then
					echo -e "label:gpt"|sfdisk "/dev/${dsk}"
	     				installsystempartition=""
	     				installbootpartition=""
	     				cfdisk "/dev/${dsk}"
				fi
     				
     			else
     				if [[ "$installsystempartition" != "$installbootpartition" ]] ; then
	     				source kur1
					echo "uefi kurulum ........"
					kurulum
				else
					mesaj="boot ve system bolumleri farkli olmali"
				fi
     			fi
           	else
           		disklabel=$(blkid -s PTTYPE -o value "/dev/${dsk}")
           	 	if [[ "$disklabel" != "dos" ]]; then
           	 		if [[ "$(legacyuyar)" == "yes" ]]; then
					echo -e "label:dos"|sfdisk "/dev/${dsk}"
     					installsystempartition=""
     					installbootpartition=""
     					cfdisk "/dev/${dsk}"
				fi
     			else
     				if [[ "$installsystempartition" == "$installbootpartition" ]] ; then
     					source kur1
					echo "legacy kurulum ........"
					kurulum
				fi
     			fi
           	fi
           	

           	
}
###### Main Menu ######
main_menu(){
     while true ; do
     if [[ -d /sys/firmware/efi ]] ; then
        result=$(dialog --no-cancel \
        --backtitle "$mesaj"\
            --output-fd 1 --menu \
            "Install Menu" 0 0 0 \
            "1" "Select Disk		( $installdisk )" \
            "2" "Create / Modify Partition" \
            "3" "Select (boot) Partition	( $installbootpartition )" \
            "4" "Select (system) Partition( $installsystempartition )" \
            "5" "Set root Password	( $installrootpasswdstar )" \
            "6" "Set Username 		( $installusername )" \
            "7" "Set User Password 	( $installuserpasswdstar )" \
            "8" "Set Language	 	( $installlang )" \
	    "9" "Set Keyboard	 	( $installkeyboard )" \
            "i" "Install" \
            "" "                      " \
            "t" "Run Terminal" \
            "" "                      " \
            "l" "Start in Live Mode" \
            "r" "Reboot"
        )
       else
        result=$(dialog --no-cancel \
        --backtitle "$mesaj"\
            --output-fd 1 --menu \
            "Install Menu" 0 0 0 \
            "1" "Select Disk		( $installdisk )" \
            "2" "Create / Modify Partition" \
            "3" "Select Partition	( $installbootpartition )" \
            "5" "Set root Password	( $installrootpasswdstar )" \
            "6" "Set Username 		( $installusername )" \
            "7" "Set User Password 	( $installuserpasswdstar )" \
            "8" "Set Language	 	( $installlang )" \
	    "9" "Set Keyboard	 	( $installkeyboard )" \
            "i" "Install" \
            "" "                      " \
            "t" "Run Terminal" \
            "" "                      " \
            "l" "Start in Live Mode" \
            "r" "Reboot"
        )
       fi
        
         echo -ne "\033c"
        if [[ "$result" == "r" ]] ; then
           reboot -f
            echo "reboot"
        elif [[ $result -eq 1 ]] ; then
           select_disk_menu
           #--------------------------------NVME--------------------------------------------
            dsk=${installdisk/*\//}
	    if echo ${dsk} | grep nvme ; then
		dskx=${dsk}p
	    else
		dskx=${dsk}
	    fi
	    #----------------------------------------------------------------------------
        elif [[ $result -eq 2 ]] ; then
            cfdisk $installdisk
        elif [[ $result -eq 3 ]] ; then
           
            if [ ! -d "/sys/block/$dsk/${dskx}1" ] ; then
            	  cfdisk /dev/${dsk}
            else
            	select_disk_boot_partition_menu
            fi
        elif [[ $result -eq 4 ]] ; then
            select_disk_system_partition_menu
        elif [[ $result -eq 5 ]] ; then
             installrootpasswdstar=""
	     installrootpasswd=""
            set_root_password
            #echo "set root passwd"
        elif [[ $result -eq 6 ]] ; then
            installusername=""
            set_username
            #echo "set username"
        elif [[ $result -eq 7 ]] ; then
            installuserpasswdstar=""
	    installuserpasswd=""
            set_username_password
            #echo "set userpasswd"
        elif [[ $result -eq 8 ]] ; then
		set_language
        elif [[ $result -eq 9 ]] ; then
            installkeyboard=""
	   set_keyboard
        elif [[ "$result" == "i" ]] ; then
           durum=$(emptyfieldcheck)                       
           mesaj="$durum"
           if [[ "$durum" == "2" ]] ; then
           	yukle
           fi
        elif [[ "$result" == "t" ]] ; then
           echo -e "\033[33;1mTerminal mode. You can type exit and go back.\033[;0m"
            PS1="\033[32;1m>>>\033[;0m " /bin/busybox ash

	elif [[ "$result" == "l" ]] ; then
          start_live
        fi
        
        echo $result
done
}
if [[ $UID -eq 0 ]] ; then
echo "*********************eudev √ßalƒ±≈ütƒ±rƒ±ldƒ± ******************************"
udevd --daemon --resolve-names=never #modprobe yerine kullanƒ±lƒ±yor
udevadm trigger --type=subsystems --action=add
udevadm trigger --type=devices --action=add
udevadm settle || true
echo "*********************ek mod√ºller y√ºklendi ******************************"
modprobe loop
modprobe ext4
cd /bin/
ln -s busybox hostname
cd -
loadkeys trq
fi

main_menu
